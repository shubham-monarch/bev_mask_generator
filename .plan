+ priority based collapsing
+ resolution based collapsing
+ refactoring generate_bev_voxels()

+ handling negative values
+ shift logger to init.py
+ fix plot_bev_scatter() color issue


+ priority based collapsing
+ crop pointcloud to bounding boxs
- hidden point removal 
+ farthest point sampling
* checkout bev-former voxelizer
+ statistical outlier removal
+ refactor compute_tilt_matrix()
+ make project_to_ground_plane more robust

+ remove main.py
+ major refactoring 
+ remove utils folder

* make [pcd-segmented to bev-segmented pipeline] fast
* use GPU parallelization
* use CPU parallelization

- get decent baseline results
* time the dataset generation step


+ BEV GT should be centered
* BEV GT should not have black regions
+ BEV GT should have fixed resolution across files

+ fix camera extrinsics 

* need to shift z as well
* fix [align normal with +y-axis if angle with y-axis is negative] in [project_to_ground_plane]
* normalize plane normal --> [a,b,c,d]
* BEV projection was shifted along y. 
+ [debug] project pointcloud to camera to check camera extrinsics
- fix label merging strategy in pcd_to_seg_mask_mono

* fix compute_tilt_matrix --> align with x and z-axis as well  
* need to align two axes instead of one
* [debug] align x and z, and y should automatically align

+ generate camera extrinsics as part of dataset
* why is normal not completely aligning with the y-axis? 

* add test.py
- change co-ordinate frame to align with the sbevnet axes
+ update generate-train-data.py
- [debug] sbvenet with only [canopy + navigable-space] as output

* fix yaw / axis-angle logs in bev-generator

+ fix BEV GT seg-masks
- do we need to add real camera extrinsics? 
- camera instrinsics scaling with image resizing -> [https://chatgpt.com/share/67582768-d0c4-8009-a9b3-edf805c2d2f3]
- stereo rectification 
- handle image resizing effect on disparity
- z / y swap
- transpose effect
- z-indices out-of-bounds error while bev_pcd -> bev_png 


======================
testing procedure
======================
- testing sequence
- with camera extrinsics npy
- with camera extrinsics npy with x / z correction
- without camera extrinsics npy
- with real camera extrinsics
- with intrisics scaling
- with disparity scaling
- with transpose
- with z-bound error fix


+ add utility to push model-data to s3


======================
aws based bev-generator
======================
+ start aws based data-generation pipeline
+ index to track processed files
+ add index.json
+ ability to resume 
- data field agnostic resumption [i.e. left / right / mono / seg-masks-mono / seg-masks-rgb/ occlusion-mask]
- upload updated index to s3 in every run
+ [util] count number of files in s3 bev-dataset

======================
implement leafFolder class
======================
* close s3 client when leafFolder goes out of scope
* add leafFolder destructor
* better name for leafFolder
+ upload  scaled images
+ add exception handling
+ add error handling in process_folder
* tmp-folder clean-up after each run
* add native progress bar for upload / download file function
* rename data-generator-s3.py to pipeline
+ add uploded folder indexing
* scope for multithreading


======================
indexing
======================
+ file by file indexing
+ step by step indexing
+ support for more keys


======================
eval cases
======================
- stereo-rectification
- occlusion masks
- ipm rgb 
- ipm fea


======================
generate additional data 
======================
- read zed-baseline from svo
- occlusion mask 
- ipm rgb
- ipm fea


======================
evaluation infrastructure 
======================
- check sbevnet utils
- EvalClass 
- integrate eval cases
- metrics ?
- train / eval / test split
- processing bev-aws to bev-model pipeline
- utility to classify dataset into [object / pole / vineyard ] heavy

+ add as submodule to stereo-occ
- refactoring [scripts, .gitkeep, bash]
+ fix horizonal rotation in GT-seg-masks 
+ fix slanting of pole lines \ uneven vine pole horizontal separation
- fix camera extrinsics calculations
+ review tilt correction --> axis angles calculations 
- start occlusion map pipeline
+ tighten compute_tilt_matrix threshold
* log global success rate for compute_tilt_matrix
- add comments for all the functions
- use repomix with o1 / gemini-1206 / sonnet 3.5
- verify number of frames in z[0-5] with z[2-7]
+ clean up compute_tilt_matrix
- check z-min for each GT-seg-masks [for void space calculations]
* verify case ground plane normal alignment with -ve y-axis case
+ improve ground plane alignment with cam y-axis\
+ horizontal tilt / swaying could be because of seg-mask generation bug
+ visualize the complete mask to see the tilt issue
- check the x/y/z-range of non-void points in each segmented pcd
* visualize the bev-pcd before collapsing to z=0

* check if dz is constant across subsequent frames
+ why is z becoming more negative across frames?
+ check if GT-seg-masks being passed to sbevnet is flipped? 
+ GT-seg-mask is swinging across frames
+ check if GT-seg-masks swings are constant feature across multiple svo segments
* automate above testing
+ verify RJM vinerow width 
+ check RJM / gallo width across multiple svo frames
- filter out GT-seg-masks with z-min > 0
- check occ-mask coverage
+ start occ mask pipeline
+ start camera-ext pipeline
+ fix tmp files in data-generator-s3
- fill void with grounds
+ update check index logic in data-generato r-s3
- add occlusion map generation in debug.py
+ add dedicated leaf-folder-cnt bash script
- clean pytest bash script (see sbevnet)
- upload s3-index.json after each frame run


* revisit clean around labels
* why do we even need clean_around_labels? 
* how does clean_around_labels affect the GT / model-training?
+ refactor bev-generator.py
- add more classes in bev-generator.py
+ fix project_to_ground_plane
+ test the project_to_ground_plane fix
+ check the pcd_grond being used in the final bev

+ refactor generate_BEV
+ refactor bev_generator.py
- add static methods in bev-generator
- fill ground points in GT-seg-masks
+ fix pcd_ground in generate_BEV
+ origin_pcd vs downsampled_pcd vs inliers_pcd
+ pcd_ground has not been downsampled before seg-mask generation
- make bev-generator functions private

- does img resizing affect the occ-map generation?
- ignore pcd_ground from occ-mask calculations
- use data-augmentation to increase frame-cnt in sbevnet
- load K from zed-sdk

- fix intermittent out-of-memory issue for occ-map
- test occ-map with debug/frames-4/

- write better comments
- add raises in doc-strings


======================
training
======================
- warm-up + cool-down 
- pytorch lightening
- pytorch fabric

+ rename files inside the test folder

- establish bug in bev_to_seg_mask_mono
+ add priority map in bev_to_seg_mask_mono
+ bev_to_seg_mask_mono might be wrong because of no xmax, zmax
+ bev_to_seg_mask_mono --> bev_pcd_to_seg_mask_mono
+ label calculation in wrong in bev_to_seg_mask_mono
+ assign highest-priority to occ-mask
- check occ-mask integration in sbevnet


======================
sbevnet
======================
- pass unequal x and z-ranges
- increase z and decrease x


======================
fix bev-generator
======================
- rename bev_generator.py to bev_mask_generator.py
- update bb value in data-generator-s3
- set bb to {'x_min': -2.49, 'x_max': 2.49, 'z_min': 0.02, 'z_max': 5}
- remove invalid points (project to [1080 * 1920] image) before generating bev-mask
- don't downsample navigable / canopy
- does removing the pcd_navigable / canopy downsampling reduce the black patches in seg-mask?
+ fix multiple tilt-rectification in bev_generator
- why are there no obstacles in seg-mask-mono if 63 are present in downsampled_pcd?
- why does seg-mask-mono have label 255? 
- check if camera / pointcloud is tilted in the colmap viewer
- compare rectified and non-rectified pcd in the colmap viewer
- create unknown class with priority 99
- support for rectangular seg-masks
- still getting intermittent z-out of bounds error while generating bev-masks

======================
fix occ-mask-generator
======================
+ rename occ.py to occ-mask-generator
+ rename data-generator-s3 to bev-mask-generator
+ do we need to pass the camera rotation-matrix to occ-mask-generator?
+ pass camera-rotation-matrix to occ-mask
+ [debug] reduce depth-threshold
- [debug] is occ-detection working for uncropped points?
- [debug] visible i.e. non-occluded should project nicely on the image
+ compare pcd to image projection with / without camera extriniscs
+ cropped vs non-cropped projection
+ depth is negative for [debug/frames-3/frame-1190/left-segmented-labelled.ply]
+ why is adding camera-extrinsics shoooting up occ-points %? 
+ add percentage of valid projections i.e. x < h and y < w
- why is the above percentage so low? 
+ use colored projection
+ swap (x,y)?
- check K using zed-sdk
- tabulate metrics for all the frames in a leaf-folder
- why are the closest vine poles always getting occluded? 
- everything with z < 1.5m is being marked as occluded
+ would be a good idea to change bev-mask-bounds --> [z_min: 1.5m]
- add occ-pcd to occ-mask coversion

